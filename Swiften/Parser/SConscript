Import("swiften_env")

myenv = swiften_env.Clone()
myenv.MergeFlags(swiften_env["BOOST_FLAGS"])
myenv.MergeFlags(swiften_env.get("LIBXML_FLAGS", ""))
myenv.MergeFlags(swiften_env.get("EXPAT_FLAGS", ""))

sources = [
		"AuthRequestParser.cpp",
		"CompressParser.cpp",
		"ElementParser.cpp",
		"IQParser.cpp",
		"MessageParser.cpp",
		"PayloadParser.cpp",
		"PayloadParserFactory.cpp",
		"PayloadParserFactoryCollection.cpp",
		"PayloadParsers/BodyParser.cpp",
		"PayloadParsers/DiscoInfoParser.cpp",
		"PayloadParsers/ErrorParser.cpp",
		"PayloadParsers/FullPayloadParserFactoryCollection.cpp",
		"PayloadParsers/PriorityParser.cpp",
		"PayloadParsers/PrivateStorageParser.cpp",
		"PayloadParsers/RawXMLPayloadParser.cpp",
		"PayloadParsers/ResourceBindParser.cpp",
		"PayloadParsers/RosterParser.cpp",
		"PayloadParsers/SecurityLabelParser.cpp",
		"PayloadParsers/SecurityLabelsCatalogParser.cpp",
		"PayloadParsers/SoftwareVersionParser.cpp",
		"PayloadParsers/StorageParser.cpp",
		"PayloadParsers/StatusParser.cpp",
		"PayloadParsers/StatusShowParser.cpp",
		"PayloadParsers/VCardParser.cpp",
		"PayloadParsers/VCardUpdateParser.cpp",
		"PlatformXMLParserFactory.cpp",
		"PresenceParser.cpp",
		"SerializingParser.cpp",
		"StanzaParser.cpp",
		"StreamFeaturesParser.cpp",
		"XMLParser.cpp",
		"XMLParserClient.cpp",
		"XMLParserFactory.cpp",
		"XMPPParser.cpp",
		"XMPPParserClient.cpp",
	]

if myenv.get("HAVE_EXPAT", 0) :
	myenv.Append(CPPDEFINES = "HAVE_EXPAT")
	sources += ["ExpatParser.cpp"]
if myenv.get("HAVE_LIBXML", 0) :
	myenv.Append(CPPDEFINES = "HAVE_LIBXML")
	sources += ["LibXMLParser.cpp"]

objects = myenv.StaticObject(sources)
swiften_env.Append(SWIFTEN_OBJECTS = [objects])
